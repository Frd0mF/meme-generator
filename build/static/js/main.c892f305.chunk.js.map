{"version":3,"sources":["components/NavBar.js","components/Form.js","App.js","index.js"],"names":["navBar","className","src","alt","memeUrl","Form","React","useState","topText","bottomText","randomMeme","meme","setMeme","allMemes","setAllMemes","useEffect","fetch","then","res","json","data","memes","formData","setFormData","formHandler","event","target","name","value","prevData","type","placeholder","onChange","onClick","memesArray","randomNumber","Math","floor","random","length","url","prevMeme","saveAs","App","ReactDOM","render","document","getElementById"],"mappings":"4LAAe,SAASA,IACtB,OACE,sBAAKC,UAAU,SAAf,UACI,qBAAKC,IAAI,gBAAgBC,IAAI,cAC7B,mD,gDCDJC,EAAU,gCAEC,SAASC,IAEpB,MAAwBC,IAAMC,SAAS,CACnCC,QAAS,GACTC,WAAY,GACZC,WAAY,kCAHhB,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAgCN,IAAMC,SAAS,IAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KACAR,IAAMS,WAAU,WACbC,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAYM,EAAKA,KAAKC,YAEpC,IAcH,MAAgCf,IAAMC,SAAS,CAC3CC,QAAS,GACTC,WAAY,KAFhB,mBAAOa,EAAP,KAAiBC,EAAjB,KAKA,SAASC,EAAYC,GACjB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,GAAY,SAAAM,GACR,OAAO,2BACAA,GADP,kBAEKF,EAAQC,OAUrB,OACE,+BACI,sBAAK3B,UAAU,OAAf,UACE,uBACI6B,KAAK,OACL7B,UAAU,aACV8B,YAAY,WACZJ,KAAK,UACLC,MAAON,EAASd,QAChBwB,SAAUR,IAId,uBACIM,KAAK,OACL7B,UAAU,aACV8B,YAAY,cACZJ,KAAK,aACLC,MAAON,EAASb,WAChBuB,SAAUR,IACX,uBAAK,uBACR,wBAAQvB,UAAU,WAAWgC,QApDrC,WACI,IAAMC,EAAarB,EACbsB,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWK,QAM3D,OALAnC,EAAU8B,EAAWC,GAAcK,IACnC5B,GAAQ,SAAA6B,GAAQ,kCACTA,GADS,IAEZ/B,WAAYN,OAETA,GA4CH,8BACA,qBAAKH,UAAU,WAAWC,IAAKS,EAAKD,WAAYP,IAAI,SACpD,oBAAIF,UAAU,gBAAd,SAAoD,KAArBqB,EAASd,QAAiB,kBAAoBc,EAASd,UACtF,oBAAIP,UAAU,mBAAd,SAA0D,KAAxBqB,EAASb,WAAoB,qBAAsBa,EAASb,aAE9F,uBAAOR,UAAU,eAAe6B,KAAK,SAASG,QA/BlD,WACES,iBAAOtC,EAAS,cA8BwDwB,MAAM,kBC5EzE,SAASe,IACpB,OACI,gCACA,cAAE,EAAF,IACA,cAACtC,EAAD,OCARuC,IAASC,OACD,cAACF,EAAD,IACFG,SAASC,eAAe,W","file":"static/js/main.c892f305.chunk.js","sourcesContent":["export default function navBar () {\r\n  return (\r\n    <nav className=\"navbar\">\r\n        <img src=\"meme-face.png\" alt=\"meme-face\"/>\r\n        <h2>Meme Generator</h2>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { saveAs } from 'file-saver'\r\n\r\nlet memeUrl = \"http://i.imgflip.com/1bij.jpg\"\r\n\r\nexport default function Form () {\r\n\r\n    const [meme, setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomMeme: \"http://i.imgflip.com/1bij.jpg\" \r\n    })\r\n\r\n    const [allMemes, setAllMemes] = React.useState({})\r\n    React.useEffect(() => {\r\n       fetch('https://api.imgflip.com/get_memes')\r\n       .then(res => res.json())\r\n       .then(data => setAllMemes(data.data.memes)\r\n       )},\r\n       [])\r\n\r\n \r\n    function GetMemeImage () {\r\n        const memesArray = allMemes\r\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\r\n        memeUrl = memesArray[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomMeme: memeUrl\r\n        }))\r\n        return memeUrl\r\n    }\r\n\r\n    const [formData, setFormData] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\"\r\n    })\r\n\r\n    function formHandler(event) {\r\n        const {name, value} = event.target\r\n        setFormData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n        function downloadImage (){\r\n          saveAs(memeUrl, 'image.jpg')\r\n        }\r\n     \r\n\r\n    return (\r\n      <main>\r\n          <div className=\"form\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-input\" \r\n                placeholder=\"Top Text\"\r\n                name=\"topText\"\r\n                value={formData.topText}\r\n                onChange={formHandler}\r\n            />\r\n\r\n\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-input\"\r\n                placeholder=\"Bottom Text\"\r\n                name=\"bottomText\"\r\n                value={formData.bottomText}\r\n                onChange={formHandler}\r\n             /><br/><br/>\r\n            <button className=\"meme-btn\" onClick={GetMemeImage}> Get a new meme </button>\r\n            <img className=\"meme-img\" src={meme.randomMeme} alt=\"meme\" />   \r\n            <h1 className=\"meme-text top\">{formData.topText === \"\" ? \"Insert top text\" : formData.topText}</h1>\r\n            <h1 className=\"meme-text bottom\">{formData.bottomText === \"\" ? \"Insert bottom text\": formData.bottomText}</h1> \r\n\r\n            <input className=\"download-btn\" type=\"button\" onClick={downloadImage} value=\"Download\"/>\r\n          </div>\r\n      </main>\r\n    );\r\n  }\r\n  ","import NavBar from './components/NavBar'\r\nimport Form from './components/Form'\r\n\r\nexport default function App () {\r\n    return (\r\n        <div>\r\n        < NavBar />\r\n        <Form />\r\n        </div>\r\n    )\r\n}","import ReactDOM from 'react-dom'\r\nimport \"@fontsource/karla\";\r\nimport './index.css'\r\nimport App from './App'\r\n\r\n\r\n\r\nReactDOM.render (\r\n        <App />\r\n    , document.getElementById('root')\r\n) \r\n"],"sourceRoot":""}